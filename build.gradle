buildscript {
    repositories {
        // Check that you have the following line (if not, add it):
        google()  // Google's Maven repository

    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.13'
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.40'
    }
}

plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.0' apply false
    id "io.gitlab.arturbosch.detekt" version '1.20.0'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


allprojects {
    apply { plugin(BuildPlugins.detekt) }
    group = "link.jingweih.android"
    version = "1.0.1"
    repositories {
        google()
        mavenCentral()
    }
    detekt {
        buildUponDefaultConfig = true // preconfigure defaults
        allRules = false // activate all available (even unstable) rules.
        config = files("$rootDir/config/detekt.yml")
        baseline = file("$rootDir/config/baseline.xml")
        // a way of suppressing issues before introducing detekt
    }

    tasks.named("detekt").configure {
        reports {
            xml.required.set(true)
            html.required.set(true)
            html.outputLocation.set(file("build/reports/detekt.html"))
            txt.required.set(true)
        }
    }

    tasks.withType(io.gitlab.arturbosch.detekt.Detekt).configureEach {
        jvmTarget = "1.8"
    }
    tasks.withType(io.gitlab.arturbosch.detekt.DetektCreateBaselineTask).configureEach {
        jvmTarget = "1.8"
    }
}

task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'hooks/pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

def publishAbleLibs = [
    "flipper-no-op",
    "flipper",
    "identity"
]

subprojects {
    apply plugin: "maven-publish"
    project.afterEvaluate {
        configure(android.lintOptions) {
            abortOnError false
        }
        if (publishAbleLibs.contains(project.name) && !plugins.hasPlugin("android")) {
            publishing {
                publications {
                    maven(MavenPublication) {
                        afterEvaluate {
                            artifactId = "$project.name"
                            if (plugins.hasPlugin("java")) {
                                from components.java
                            } else if (plugins.hasPlugin("android-library")) {
                                from components.release
                            }
                        }

                    }
                }

                repositories {
                    maven {
                        url = "https://maven.pkg.github.com/jingweihu/jingwei-android-common/"
                        credentials {
                            username = System.getenv("GITHUB_API_USERNAME")
                            password = System.getenv("GITHUB_API_PUBLISH_TOKEN")
                        }
                    }
                }
            }
        }
    }
}